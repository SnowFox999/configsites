# Generated by Django 4.2.9 on 2024-07-05 11:49

import datetime
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionalSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('text', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='Computer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('serial_number', models.CharField(max_length=30, unique=True)),
                ('date', models.DateField(default=datetime.date.today)),
                ('addSoftware', models.TextField(blank=True, null=True)),
                ('addDevices', models.TextField(blank=True, null=True)),
                ('addComment', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Progress', 'In Progress'), ('Ready', 'Ready'), ('Confirm', 'Confirm')], max_length=10)),
                ('addSettings', models.ManyToManyField(blank=True, null=True, to='home.additionalsettings')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='DiskPlace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='HardDisk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gigabytes', models.PositiveSmallIntegerField()),
                ('type', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='LANcard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Monitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, choices=[('Monitor1', 'Monitor1'), ('Monitor2', 'Monitor2')], max_length=30)),
                ('custom_name', models.CharField(blank=True, max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Processor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='RAM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gigabytes', models.PositiveSmallIntegerField()),
                ('type', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='TypeDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Access', 'Access'), ('SQL', 'SQL')], max_length=10)),
                ('version', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='UserName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(choices=[('Admin', 'Admin'), ('User', 'User')], max_length=5)),
                ('login', models.CharField(max_length=20)),
                ('password', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='VideoCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Order_Computer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('computer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.computer')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.CharField(max_length=30)),
                ('computer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='home.computer')),
            ],
        ),
        migrations.AddField(
            model_name='computer',
            name='admin',
            field=models.ManyToManyField(limit_choices_to={'user_type': 'Admin'}, related_name='admin_computers', to='home.username'),
        ),
        migrations.AddField(
            model_name='computer',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='computers', to='home.customer'),
        ),
        migrations.AddField(
            model_name='computer',
            name='diskPlace',
            field=models.ManyToManyField(blank=True, null=True, to='home.diskplace'),
        ),
        migrations.AddField(
            model_name='computer',
            name='employee',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='computer', to='home.employee'),
        ),
        migrations.AddField(
            model_name='computer',
            name='hardDisk',
            field=models.ManyToManyField(to='home.harddisk'),
        ),
        migrations.AddField(
            model_name='computer',
            name='lanCard',
            field=models.ManyToManyField(to='home.lancard'),
        ),
        migrations.AddField(
            model_name='computer',
            name='monitor',
            field=models.ManyToManyField(blank=True, null=True, to='home.monitor'),
        ),
        migrations.AddField(
            model_name='computer',
            name='processor',
            field=models.ManyToManyField(to='home.processor'),
        ),
        migrations.AddField(
            model_name='computer',
            name='ram',
            field=models.ManyToManyField(to='home.ram'),
        ),
        migrations.AddField(
            model_name='computer',
            name='typeDB',
            field=models.ManyToManyField(to='home.typedb'),
        ),
        migrations.AddField(
            model_name='computer',
            name='user',
            field=models.ManyToManyField(limit_choices_to={'user_type': 'User'}, related_name='user_computers', to='home.username'),
        ),
        migrations.AddField(
            model_name='computer',
            name='videoCard',
            field=models.ManyToManyField(to='home.videocard'),
        ),
    ]
